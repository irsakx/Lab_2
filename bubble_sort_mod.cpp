#include <iostream>  // Подключение библиотеки для ввода-вывода
using namespace std; // Использование стандартного пространства имен

int main() {
  int arr[] = {5, 3, 1, 4, 2};  // Инициализация массива целых чисел
  int n = sizeof(arr) / sizeof(arr[0]);  // Вычисление количества элементов в массиве
  int j = 0, i = 0, k = 0;  // Объявление переменных: j и i для сортировки, k для цикла вывода

start_outer:
  if (j >= n - 1) goto end_outer;  // Если пройдены все необходимые итерации внешнего цикла, переход к завершению сортировки
  i = 0;  // Инициализация индекса внутреннего цикла для новой итерации внешнего цикла

start_inner:
  if (i >= n - j - 1) goto end_inner;  // Если достигнут конец внутреннего цикла для текущей итерации, переход к завершению внутреннего цикла
  if (arr[i] > arr[i + 1]) {  // Сравнение соседних элементов: если текущий элемент больше следующего, необходимо выполнить обмен
    int temp = arr[i];  // Сохранение значения arr[i] во временную переменную для последующего обмена
    arr[i] = arr[i + 1];  // Замена текущего элемента значением следующего элемента
    arr[i + 1] = temp;  // Восстановление значения следующего элемента из временной переменной
  }
  i++;  // Инкремент индекса внутреннего цикла для перехода к следующей паре элементов
  goto start_inner;  // Переход к следующей итерации внутреннего цикла

end_inner:
  j++;  // Инкремент счетчика внешнего цикла после завершения внутреннего цикла
  goto start_outer;  // Переход к следующей итерации внешнего цикла

end_outer:
  k = 0;  // Инициализация переменной для цикла вывода отсортированных элементов

start_print:
  if (k >= n) goto end_print;  // Если выведены все элементы массива, переход к завершению цикла вывода
  cout << arr[k] << " ";  // Вывод текущего элемента массива с пробелом в качестве разделителя
  k++;  // Инкремент переменной вывода для перехода к следующему элементу
  goto start_print;  // Переход к следующей итерации цикла вывода

end_print:
  return 0;  // Завершение работы программы с кодом возврата 0 (успешное выполнение)
}
